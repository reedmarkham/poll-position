name: CI/CD Pipeline

on:
  push:
    branches:
      - main # Trigger on commits to the main branch
  pull_request:
    branches:
      - main # Trigger on pull requests to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      S3_BUCKET: ${{ secrets.S3_BUCKET }}
      AWS_IAM_ARN: ${{ secrets.AWS_IAM_ARN }}

    steps:
    # Step 1: Checkout the repository
    - name: Checkout Code
      uses: actions/checkout@v3

    # Step 2: Configure AWS credentials
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    # Step 3: Set up Node.js
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'

    # Step 4: Install dependencies
    - name: Install Dependencies
      run: npm install

    # Step 5: Authenticate Docker with ECR
    - name: Authenticate Docker with ECR
      run: |
        aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com

    # Step 6: Build and push Docker image
    - name: Build and Push Docker Image
      run: |
        docker build -t poll-position -f app/Dockerfile app
        docker tag poll-position:latest ${ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/poll-position:latest
        docker push ${ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/poll-position:latest

    # Step 7: Bootstrap CDK (if needed)
    - name: Bootstrap CDK
      run: npx cdk bootstrap aws://${ACCOUNT_ID}/${AWS_REGION}

    # Step 8: Deploy CDK Stack
    - name: Deploy CDK Stack
      run: npx cdk deploy --require-approval never
